# =============================================================================
# .github/workflows/ci.yml — Pipeline GitHub Actions
# Repository: memoire-gcp-terraform
# Purpose   : fmt/validate/plan(+upload)/apply(main) + Prowler + artefacts
# Author    : RD
# Date      : 2025-10-01
#
# Notes importantes
# - Prowler ne s’exécute que si le plan Terraform a des changements.
# - Les rapports (Checkov/TF plan/Prowler) sont déposés dans `reports/`
#   puis uploadés en artefacts si présents.
# - La clé du SA CI est fournie via secret `GCP_SA_KEY`.
# =============================================================================

name: CI - Terraform + Checks

on:
  push:
    branches: [ "main" ]
  pull_request:
  # Run depuis Github actions (forcer Prowler si besoin)
  workflow_dispatch:
    inputs:
      run_prowler:
        description: "Prowler: auto (si changements TF), always, ou never"
        type: choice
        options: [auto, always, never]
        default: auto

permissions:
  contents: read
  id-token: write

jobs:
  ci:
    runs-on: ubuntu-latest
    env:
      GOOGLE_CLOUD_PROJECT: direct-byte-472309-n3

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Authenticate to Google Cloud (ADC)
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          export_environment_variables: true

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2

      - name: Create reports folder
        run: mkdir -p reports

      - name: Terraform init
        run: terraform init -input=false

      - name: Terraform validate
        run: terraform validate

      - name: Terraform plan (detect changes)
        id: plan
        run: |
          set -o pipefail
          terraform plan -detailed-exitcode -out=tfplan | tee plan.txt || rc=$?
          if [ "${rc:=0}" -eq 1 ]; then
            echo "Terraform plan failed"; exit 1
          fi
          if [ "${rc}" -eq 2 ]; then
            echo "changes=true" >> $GITHUB_OUTPUT
          else
            echo "changes=false" >> $GITHUB_OUTPUT
          fi
          echo "exitcode=${rc:-0}" >> $GITHUB_OUTPUT

      - name: Upload TF plan (PRs only)
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: tf-plan
          path: plan.txt

      - name: Terraform apply (main only)
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve tfplan

      # Décision: run Prowler
      - name: Decide if we run Prowler
        id: gate
        run: |
          mode="${{ github.event.inputs.run_prowler || 'auto' }}"
          changes="${{ steps.plan.outputs.changes || 'false' }}"
          if [ "$mode" = "always" ]; then run=true
          elif [ "$mode" = "never" ]; then run=false
          else run="$changes"; fi
          echo "run=$run" >> $GITHUB_OUTPUT
          echo "Prowler mode=$mode, changes=$changes, run=$run"

      - name: Setup Python
        if: steps.gate.outputs.run == 'true'
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Prowler
        if: steps.gate.outputs.run == 'true'
        run: pip install 'prowler~=3.11'

      - name: Run Prowler
        if: steps.gate.outputs.run == 'true'
        run: |
          prowler gcp --project-ids "$GOOGLE_CLOUD_PROJECT" -M html json -o reports/

      - name: Upload security reports
        if: steps.gate.outputs.run == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: reports/*
