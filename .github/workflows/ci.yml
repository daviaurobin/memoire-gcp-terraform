# =============================================================================
# .github/workflows/ci.yml — Pipeline GitHub Actions
# Repository: memoire-gcp-terraform
# Purpose   : fmt/validate/plan(+upload)/apply(main) + Prowler + artefacts
# Author    : RD
# Date      : 2025-10-01
#
# Notes importantes
# - Prowler ne s’exécute que si le plan Terraform a des changements.
# - Les rapports (Checkov/TF plan/Prowler) sont déposés dans `reports/`
#   puis uploadés en artefacts si présents.
# - La clé du SA CI est fournie via secret `GCP_SA_KEY`.
# =============================================================================

name: CI - Terraform + Checks

on:
  push:
    branches: [ "main" ]
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  ci:
    runs-on: ubuntu-latest
    env:
      # ID du projet GCP à scanner et déployer
      GOOGLE_CLOUD_PROJECT: direct-byte-472309-n3

    steps:
      # --- Checkout du code
      - name: Checkout
        uses: actions/checkout@v4

      # --- Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      # --- Authentification GCP via la clé JSON (ADC exportée)
      - name: Authenticate to Google Cloud (ADC)
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          export_environment_variables: true

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2

      # --- Dossier des rapports (Prowler)
      - name: Create reports folder
        run: mkdir -p reports

      # --- Pipeline Terraform standard
      - name: Terraform init
        run: terraform init -input=false

      - name: Terraform validate
        run: terraform validate

      - name: Terraform plan
        id: plan
        run: |
          set -o pipefail
          terraform plan -out=tfplan | tee plan.txt

      - name: Upload TF plan (PRs only)
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: tf-plan
          path: plan.txt

      - name: Terraform apply (main only)
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve tfplan

      # --- Prowler : toujours exécuté
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Prowler
        run: pip install 'prowler~=3.11'

      - name: Run Prowler (always)
        # Le job n'échoue pas si Prowler trouve des findings
        continue-on-error: true
        env:
          # Prowler lit les ADC via GOOGLE_APPLICATION_CREDENTIALS exporté par l'étape "auth"
          GOOGLE_CLOUD_PROJECT: ${{ env.GOOGLE_CLOUD_PROJECT }}
        run: |
          echo "Scanning project: ${GOOGLE_CLOUD_PROJECT}"
          prowler gcp --project-ids "${GOOGLE_CLOUD_PROJECT}" -M html json -o reports/

      - name: Upload security reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: reports/*
