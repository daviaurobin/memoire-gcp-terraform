# =============================================================================
# .github/workflows/ci.yml — Pipeline GitHub Actions
# Repository: memoire-gcp-terraform
# Purpose   : fmt/validate/plan(+upload)/apply(main) + Prowler + artefacts
# Author    : RD
# Date      : 2025-10-01
#
# Notes importantes
# - Prowler ne s’exécute que si le plan Terraform a des changements.
# - Les rapports (Checkov/TF plan/Prowler) sont déposés dans `reports/`
#   puis uploadés en artefacts si présents.
# - La clé du SA CI est fournie via secret `GCP_SA_KEY`.
# =============================================================================

name: CI - Terraform + Checks

on:
  push:
    branches: ["main"]
  pull_request:

permissions:
  contents: read
  id-token: write

env:
  TF_IN_AUTOMATION: "true"
  GCP_PROJECT_ID: direct-byte-472309-n3

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ---- Terraform toolchain ----
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.7.5

      # ---- Auth GCP (SA JSON depuis le secret) ----
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ env.GCP_PROJECT_ID }}
          # crée un fichier ADC et exporte GOOGLE_APPLICATION_CREDENTIALS
          create_credentials_file: true

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}

      # whoami (pour debug)
      - name: Whoami (debug)
        run: |
          gcloud --version
          gcloud config list
          echo "ADC file: $GOOGLE_APPLICATION_CREDENTIALS"
          gcloud auth list

      # ---- Dossier des rapports ----
      - name: Create reports folder
        run: mkdir -p reports

      # ---- Terraform ----
      - name: Terraform init
        run: terraform init -input=false

      - name: Terraform validate
        run: terraform validate

      - name: Terraform plan
        if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'
        run: terraform plan -input=false -out=tfplan

      - name: Upload TF plan (PRs)
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: tfplan

      - name: Terraform apply (main only)
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve -input=false

      # ---- Prowler (non-bloquant) ----
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install Prowler
        run: pip install "prowler==3.*"

      - name: Run Prowler (non-blocking)
        shell: bash
        run: |
          # Ne jamais échouer en fonction des findings
          prowler gcp --project-ids "${{ env.GCP_PROJECT_ID }}" -M html json -o reports/ --quiet-exit || true

      - name: Upload security reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: reports/
          if-no-files-found: warn
